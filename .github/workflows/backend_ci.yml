name: Back+Deploy

on:
  push:

jobs:
  lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "21"
          cache: gradle
      - run: ./gradlew --version
      - run: ./gradlew check

  test:
    needs: lint
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "21"
          cache: gradle
      - run: ./gradlew test

  build:
    needs: test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "21"
          cache: gradle
      - run: ./gradlew clean build -x test
      - uses: actions/upload-artifact@v4
        with:
          name: backend_jar
          path: backend/build/libs/*.jar

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: backend_jar
          path: dist

      - run: ls -al dist

      - name: Upload jar to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "dist/*.jar"
          target: "~/app"

      - name: Start app
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            set -e
            mkdir -p ~/app
            cd ~/app
            JAR=$(ls -t *.jar | head -n1)
            if command -v lsof >/dev/null 2>&1; then
              PID=$(lsof -t -i:8080 || true)
              if [ -n "$PID" ]; then kill -9 "$PID" || true; fi
            else
              fuser -k 8080/tcp || true
            fi
            $(cat ../../.env | xargs)
            nohup java -jar "$JAR" > app.log 2>&1 &
            echo "Started $JAR"
